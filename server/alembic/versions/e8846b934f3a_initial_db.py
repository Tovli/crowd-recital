"""initial db

Revision ID: e8846b934f3a
Revises: 
Create Date: 2024-08-31 20:55:26.743936

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = "e8846b934f3a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email_verified", sa.Boolean(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("picture", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("group", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "text_documents",
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("source", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("source_type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("text", sa.JSON(), nullable=True),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("owner_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "recital_sessions",
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("document_id", sa.Uuid(), nullable=True),
        sa.Column("source_audio_filename", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("main_audio_filename", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("light_audio_filename", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("text_filename", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["text_documents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_recital_sessions_document_id"), "recital_sessions", ["document_id"], unique=False)
    op.create_index(op.f("ix_recital_sessions_status"), "recital_sessions", ["status"], unique=False)
    op.create_index(op.f("ix_recital_sessions_user_id"), "recital_sessions", ["user_id"], unique=False)
    op.create_table(
        "recital_audio_segments",
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("recital_session_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("sequential", sa.Integer(), nullable=False),
        sa.Column("filename", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["recital_session_id"],
            ["recital_sessions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_recital_audio_segments_recital_session_id"),
        "recital_audio_segments",
        ["recital_session_id"],
        unique=False,
    )
    op.create_table(
        "recital_text_segments",
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("recital_session_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("seek_end", sa.Float(), nullable=False),
        sa.Column("text", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["recital_session_id"],
            ["recital_sessions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_recital_text_segments_recital_session_id"),
        "recital_text_segments",
        ["recital_session_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_recital_text_segments_recital_session_id"), table_name="recital_text_segments")
    op.drop_table("recital_text_segments")
    op.drop_index(op.f("ix_recital_audio_segments_recital_session_id"), table_name="recital_audio_segments")
    op.drop_table("recital_audio_segments")
    op.drop_index(op.f("ix_recital_sessions_user_id"), table_name="recital_sessions")
    op.drop_index(op.f("ix_recital_sessions_status"), table_name="recital_sessions")
    op.drop_index(op.f("ix_recital_sessions_document_id"), table_name="recital_sessions")
    op.drop_table("recital_sessions")
    op.drop_table("text_documents")
    op.drop_table("users")
    # ### end Alembic commands ###
